<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
	
<!-- FORM
	
  <item>
    <title>RSS Tutorial</title>
    <link>http://www.w3schools.com/xml/xml_rss.asp</link>
    <content type="html">  </content>
  </item>
  
-->

<channel>
  <title>Christopher Sardegna</title>
  <link>https://www.chrissardegna.com/blog</link>
  <description>Christopher Sardegna's Blog: Technology and Data Science</description>
  <updated>2016-22-02</updated>
  <item>
    <title>Using Keynote to Make Beautiful Data Visualizations</title>
    <link>https://chrissardegna.com/blog/posts/keynote-data-vizualization/</link>
    <content type="html"> <p>Keynote, Apple’s <a href="https://www.apple.com/mac/keynote/">presentation</a> software, is often left behind by its superior competition, Powerpoint. When building slide decks, this is nearly always the case. When it comes to data visualization, however, Keynote takes the top spot.</p>

<p>Keynote, as with Apple’s entire <a href="https://www.apple.com/iwork-for-icloud/">iWork suite</a>, is not aimed at dry enterprise applications, but rather at fun and simple consumer tasks. As such, Keynote’s fun aesthetic make it much easier to design modern, visually appealing data visualizations. In fact, Apple champions data visualization in their latest El Capitan <a href="https://www.apple.com/mac/keynote/">ad copy</a>:</p>

<blockquote>
<p>When it comes to explaining data, a chart is worth a thousand words. Choose from column, bar, pie, scatter, bubble charts, and more. Use animation to add visual impact. And make your charts interactive to focus attention on important stages of the story. The effect is huge, but the effort isn’t.</p>
</blockquote>

<p>Today, I am further visualizing data from my <a href="http://chrissardegna.com/blog/posts/using-your-twitter-archive-to-visualize-your-tweets/">Twitter Archive post</a>. The data was all compiled using Excel and manipulated there, then copied into charts’ data fields in Keynote. From there, I used various Keynote features to make the data very legible. </p>

<p>First, I added a custom slide size to fit the data. To do this, select <em>Document</em> in the top right and select <em>Custom Slide Size</em> under <em>Slide Size</em>. I believe the default is set to 4:3. Infographics tend to be tall, so I chose 2048x3940:</p>

<p><img src="https://i.imgur.com/xdNibDl.png" alt="Click to Enlarge"></a></p>

<p>Next, I added a title to the Master slide. There are 4 objects in total, 2 text objects and 2 shape objects. Because these are on the master slide they are static, irrespective of any other content on the slide. This helps keep things aligned down the road.</p>

<p><img src="https://i.imgur.com/tNU6z1i.png" alt="Click to Enlarge"></a></p>

<p>To achieve the glowing effect, I added a colored shadow behind the title. This is a common trick; the gaussian blur that Apple adds makes it look fantastic. Here are the settings I used:</p>

<p><img src="https://i.imgur.com/eiirtLJ.png" alt="Click to Enlarge"></a></p>

<p>Next, I added the first few elements. Hit <em>Done</em> at the bottom of the screen to get out of the Master slide edit mode. I took two line objects and some circle objects and lined them up to form a timeline, then added some text objects to provide some context. The circles have different colored borders and glowing shadows to accent them as well:</p>

<p><img src="https://i.imgur.com/PExQY9n.png" alt="Click to Enlarge"></a></p>

<p>One of the coolest things about Keynote on El Capitan is that it supports Force Touch. Instead of ungrouping all of these elements to edit them, you can Force Touch on an element to edit it. For example, you can edit the chart data without ungrouping:</p>

<center><div class="gfyitem" data-title=true data-autoplay=false data-controls=true data-expand=false data-id="VapidFinishedBarebirdbat" ></div></center>

<p>Once the objects are lined up correctly, the best practice is to group them as an object. This prevents them from becoming disconnected and makes it far easier to line the further items up. I next added the first chart. Select a <em>2D Pie Chart</em> from the <em>Charts</em> menu at the top. Force-Touch or double click on the pie to edit the data. Once it is filled with the relevant data, I added some text objects and line objects to explain the data. Group the objects together when they are completed.</p>

<p><img src="https://i.imgur.com/ado5Sf3.png" alt="Click to Enlarge"></a></p>

<p>Next came the most complicated part: the volume line chart. Begin by adding a <em>2D Line Graph</em> from the <em>Charts</em> menu. This setup is much more complex than the others. I hid all of the items on the chart except for the line itself because I wanted to roll a custom solution. The traditional X and Y axis bars make charts look too verbose, so I removed them.</p>

<p><img src="https://i.imgur.com/w7Qtz1S.png" alt="Click to Enlarge"></a></p>

<p>To create the temporal separation, I used line objects set to dots and text objects. I then manually spaced them based on where I know they should be:</p>

<p><img src="https://i.imgur.com/c5ejyip.png" alt="Click to Enlarge"></a></p>

<p>Before grouping, the chart looked like this. It is composed of circle elements, text elements, line elements, a balloon element, and a chart.</p>

<p><img src="https://i.imgur.com/HjjwWJ1.png" alt="Click to Enlarge"></a></p>

<p>Finally, I moved on to the summary elements. These are mainly composed of squares and boxes and do not use any charting techniques. The rightmost “progress bars” are composed of a modified rectangle box and several smaller rectangles. The Trapezoidal end-caps are achieved by using the shape editor. Right-click the ungrouped object and choose “Make Editable” to define the midpoint and endpoints of the curves you need.</p>

<p><img src="https://i.imgur.com/ZC8HKNC.png" alt="Click to Enlarge"></a></p>

<p>To make the progress bar itself, I used several rectangular objects and used different colors and boarders to denote the active areas:</p>

<p><img src="https://i.imgur.com/z22gsRD.png" alt="Click to Enlarge"></a></p>

<p>Finally, I created a circle object and made exactly 100 small rectangles and arranged them in a circle. They were shaded according to the data. I then added another text bubble and annotated what it represented. </p>

<p><img src="https://i.imgur.com/JAcKauo.png" alt="Click to Enlarge"></a></p>

<p>Once each of the sections were complete, it was time to line them all up. The easiest method is to zoom all the way out, select each of the 4 groups, right click on one, and select <em>Align Objects</em> &gt; <em>Center</em>.</p>

<p><img src="https://i.imgur.com/oisQEJJ.png" alt="Click to Enlarge"></a></p>

<p>Here is the end result. I have provided the source file as well.</p>

<center><p><a href="https://i.imgur.com/KjG4tWK.jpg">Image</a> | <a href="http://chrissardegna.com/blog/posts/keynote-data-vizualization/Visualization.pdf">PDF</a> | <a href="http://chrissardegna.com/blog/posts/keynote-data-vizualization/Visualization.key">Keynote</a></p></center>

<p><img src="https://i.imgur.com/KjG4tWK.jpg" alt=“Click to Enlarge“></a></p>

<p>Keynote allows for many different export options. Most importantly, it can export vectored PDFs with selectable text. This is great for sharing because you can then export images from Preview at any size.</p>

<p><img src="https://i.imgur.com/6fHlFUy.png" alt=“Click to Enlarge“></a></p>

<p>Prior to this project, I had no idea how powerful Keynote was in the field of data visualization. Moving forward, I think it is a powerful tool that would be silly to ignore. </p>

<center><p>Discussion: <a href="https://www.reddit.com/r/dataisbeautiful/comments/44u18q/using_keynote_to_make_beautiful_data/">r/DataIsBeaitiful</a> | <a href="https://www.reddit.com/r/visualization/comments/44u76q/using_keynote_to_make_beautiful_data/">r/Vizualization</a> | <a href="https://news.ycombinator.com/item?id=11062248">YCombinator</a></p></center> </content>
  </item>
  <item>
    <title>The eGPU Problem</title>
    <link>https://chrissardegna.com/blog/posts/the-egpu-problem/</link>
    <content type="html"> <p>Thunderbolt eGPU docks are a huge advancement. Plugging a Titan X into my rMBP would be a blessing for a lot of the work I do, from data modeling in MATLAB and regressing in STATA to video editing and playing games.</p>
<p>Apple’s current lineup of MacBook Pros — while <a href="https://arstechnica.com/apple/2015/06/new-model-two-year-old-processor-the-2015-15-inch-retina-macbook-pro-reviewed/">old</a> — still has powerful top-of-the-line models:</p>
<table class="tg">
<tr>
<td>Processor</td>
<td>2.8GHz Quad-core Intel Core i7, Turbo Boost up to 4.0GHz</td>
</tr>
<tr>
<td>Memory</td>
<td>16GB 1600MHz DDR3L SDRAM</td>
</tr>
<tr>
<td>SSD</td>
<td>1TB PCIe-based Flash Storage</td>
</tr>
<tr>
<td>GPU</td>
<td>Intel Iris Pro Graphics + AMD Radeon R9 M370X with 2GB GDDR5 memory</td>
</tr>
</table>
<p>The largest setback to completing power-hungry work is the GPU. The integrated Iris Pro can <a href="http://www.macrumors.com/2015/04/06/2015-macbook-pro-ui-lag-os-x-yosemite/">barely</a> drive the internal Retina display and the discrete AMD R9 M370X just <a href="http://gpuboss.com/graphics-card/Radeon-R9-M370X-Mac">does not</a> cut it when it comes to intensive computing. </p>
<p>External GPU docks have been around for a while for anyone who wants to roll a <a href="http://hackaday.com/2011/10/19/beefing-up-your-laptops-gaming-chops-with-an-external-gpu/">custom solution</a>, but computer hardware – and especially laptop hardware – has been historically unable to use the power due to the transfer speed bottleneck from the possible laptop ports. Thunderbolt 2’s 20 Gbps transfer speeds have unlocked the possibility for efficient eGPU use in <a href="http://bizon-tech.com/us/bizonbox2-egpu.html/">MacBooks</a>, and the recent CES expanded that interest with new offerings from <a href="http://www.pcgamer.com/msi-and-alienware-external-graphics-enclosures-at-ces-2015s-laptop-trend/">MSI and Alienware</a> that take advantage of Thunderbolt 3’s 40 Gbps. </p>
<p>As far as asynchronous rendering, neural networks, and other similar asynchronous work is concerned, eGPU docks increase accessibility by lowering the price and increasing availability and ease of use. However, the biggest problem eGPUs currently face (at least with OS X) is that they cannot actually drive the displays if the computer already has a discrete card. If the machine lacks a discrete card, the eGPU can only be used to drive external, non-Thunderbolt displays that are connected to the eGPU and not the computer.</p>
<p>External GPUs currently are, however, not entirely useful for gaming or expanding the number of displays OS X devices can drive as Apple imposes limits on this functionality: to use eGPUs with OS X, the displays must be plugged in through the eGPU, not the computer’s internal ports. Essentially, eGPUs cannot be used to drive <em>any</em> displays connected to the computer — only for asynchronous rendering or displays connected to the eGPU. eGPUs also cannot be used to drive the internal display. The internal GPU(s) will power displays connecting to the computer.</p>
<p>Other limitations of current eGPU offerings include the Thunderbolt Bandwidth bottleneck — 20 Gbps or 40 Gbps depending on version. Finally, they cannot be daisy chained, as they must be plugged directly to the computer (not through an adapter or display) to take full advantage of the transfer speeds.</p>
<p>External GPUs are an incredible step for mobile computing that bring it closer to enabling desktop-class computing on the go. Current limitations demonstrate that eGPU technology still has far to go, especially regarding integration with the operating system.</p>
<center><p>Discussion: <a href="https://news.ycombinator.com/item?id=10955791">YCombinator</a></p></center> </content>
  </item>
  <item>
    <title>The Console Storage Speed Bottleneck</title>
    <link>https://chrissardegna.com/blog/posts/the-console-storage-speed-bottleneck/</link>
    <content type="html"> <p>Slow storage is a problematic bottleneck for console gaming. The 5200 RPM Hard Drive and SATA II connection inside the Xbox One are the primary bottlenecks for asset decompression and loading times. Although they keep the manufacturing costs down, they dramatically increase time spent loading compressed assets on the fly, multiplying the already slow rendering from the <a href="https://www.techpowerup.com/gpudb/2086/xbox-one-gpu.html">AMD Durango</a> processor.</p>
<p>SATA II is archaic and slow, so replacing the internal drive is not an adequate solution. The USB 3 ports on the back provide a perfect answer: no voided warranty, no messy deconstruction, and far faster transfer speeds. USB 3 can transfer at up to 640 megabytes per second while SATA II can transfer at up to 300 megabytes per second. Since USB 3 is more accessible and faster, it is the best choice to bypass the console’s storage bottleneck.</p>
<p>I used a 1TB <a href="http://www.frys.com/product/7741828;jsessionid=GbCI3yxq6kh7PvzBMz1v9g__.node1">Seagate Laptop SSHD</a> that combines an 8GB SSD with a 7200RPM HDD for the storage and a generic USB 3.0 SATA III <a href="http://www.frys.com/product/8057834">Docking Station</a> to connect it. The whole setup cost me less than $100 when I bought these items in-store at Fry’s.</p>
<p>Plugging them in is simple: just insert the drive into the docking station and plug that into the Xbox One. The console will ask you to format and name the drive. When the console notifies you that the external storage is ready, you can begin to copy the games over from the internal HDD.</p>
<p>To ascertain the performance increases from the removal of the old storage bottleneck, I ran some benchmarks. The following table consists of fast-travel loading times from The Witcher 3: Wild Hunt. I ran the tests 5 times and averaged the resulting times. All calculations were made in Excel.</p>
<table>
<tr>
<th>Fast Travel Locations</th>
<th>Internal HDD</th>
<th>External SSHD</th>
<th>% Reduction</th>
</tr>
</tr>
<tr>
<td>Upper Mill to Heirarch Square</td>
<td align="center">39.88</td>
<td align="center">21.88</td>
<td align="center">45%</td>
</tr>
<tr>
<td>Heirarch Square to Royal Palace in Vizima</td>
<td align="center">29.96</td>
<td align="center">16.20</td>
<td align="center">46%</td>
</tr>
<tr>
<td>Royal Palace in Vizima to Kaer Morhen</td>
<td align="center">30.83</td>
<td align="center">17.52</td>
<td align="center">43%</td>
</tr>
<tr>
<td>Kaer Morhen to Bridge to Kaer Trolde</td>
<td align="center">59.86</td>
<td align="center">39.93</td>
<td align="center">33%</td>
</tr>
<tr>
<td>Reload Save After Jumping from Bridge to Kaer Trolde</td>
<td align="center">1:07.46</td>
<td align="center">40.10</td>
<td align="center">41%</td>
</tr>
</table>
<p>The average load time reduction is 42%, nearly cutting wait time in half. Loading between fast travel points that are much closer together is near instant. There are many other noticeable improvements as well: many games use a progressive asset loading algorithm that loads meshes and textures based on distance from the player to cut down memory constraints. This practice can lead to low-quality placeholders showing while higher-quality assets are decompressed. The new storage alleviates this quite well; I have not noticed any of this occurring in Witcher 3 since installation.</p>
<p>For less than $100, the new drive and dock make an incredibly cost-effective solution to the memory bottleneck.</p>
<center><p>Discussion: <a href="https://www.reddit.com/r/xboxone/comments/3zj9c6/an_external_sshd_decreases_loading_time_by_about/">r/XboxOne</a></p></center> </content>
  </item>
    <item>
    <title>Clash of Clans: An Economic Analysis</title>
    <link>https://chrissardegna.com/blog/posts/clash-of-clans-an-economic-analysis/</link>
    <content type="html"> <p>Or: How I made the CoCulator.</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/9ddc7gd6ncxa_small.png" alt="1-Im5dRNtQJ6Xbu84fE4Xlsw.png"></a>
<em>My humble village.</em></p>
<p>Clash of Clans has been a little obsession of mine over the last few years. The economy of this game always fascinated me, and I have finally found the time to analyze it. I will be providing the raw data and Excel workbooks for your entertainment throughout this post.</p>
<h1>Part 1: Analysis</h1>
<h2>Cost</h2>
<p>The number one question I had before I began this project was what a fully maxed Town Hall 10 base would cost if one were to upgrade using only gems, i.e. the nominal value of a Clash of Clans base. This chart shows the cost to upgrade to the base level from the max of the previous base level:</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/gh2zmhmjmk0fgq_small.png" alt="1--9Y_dx0Ve5N_OnFrSZFnsg.png"></a></p>
<p>With heroes, the growth rate becomes negative from Town Hall 9 to Town Hall 10. Without, it only slightly drops. This is because the cost addition of the Archer Queen at Town Hall 9 is so large: at Town Hall 9, the Queen can be upgraded from level 1 all the way to level 30, cumulatively costing 2,397,500 Dark Elixir. The cumulative cost from 31–40 is only 1,775,000. Thus, calculating them separately yields a slightly smoother curve:</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/gftwrrjtqbqotq_small.png" alt="1-7PIhOBQtYyTRV_pkwjvYVg.png"></a>
Green line is actual data, blue line tracks the Pareto curve trend.</p>
<p>The distribution we see is a example of a Pareto distribution: in this case, just over 80% of the upgrade cost falls under the last two Town Hall levels. You can view this data in this <a href="https://docs.google.com/spreadsheets/d/1BJYxvcVmBZ-yYylptIWkPzZc6HYpNwghWLIbg5RtL5Y/edit?usp=sharing" rel="nofollow">Google Sheet</a>. However, the charts aren’t as pretty.</p>
<h2>Cost Progression</h2>
<p>The buildings each have a respective cost that change quite a bit over time. I exported images of the chart below from the worksheet and compiled them as a gif. Note the changes to scale:</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/pesxl0b76lpo9w_small.gif" alt="1-UrgNz-KF22eWdUxq2L5EJA.gif"></a></p>
<p>From Town Hall 1 to Town Hall 10. See <a href="http://makeagif.com/i/l818eq" rel="nofollow">.mp4</a> version here. Units: gold/elixir.</p>
<p>Troops have a similar pattern, with the costs exponentially rising through the course of the game. Below are the charts for standard light and dark troops.</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/bm9qucnwpp0q_small.gif" alt="1-Tvz3cz4Hltm0lN99pOzkTA.gif"></a>
Troop upgrades start at Town Hall 3, not Town Hall 1. <a href="http://makeagif.com/i/k6PX68" rel="nofollow">.mp4</a> available here. Units: elixir.</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/5aheszepxmsxbq_small.gif" alt="1-i3W5q_20NkQ0pDxAagDMbg.gif"></a>
Dark troop upgrades start at Town Hall 7, not Town Hall 1. <a href="http://makeagif.com/i/A1dV3M" rel="nofollow">.mp4</a> available here. Units: dark elixir.</p>
<p>The graph for Heroes does not show very much progression, as there are only 2 types and most of the upgrades are in the later levels. Here is the final chart for Town Hall 10 Heroes:</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/eivgugagy4e3g_small.png" alt="1-86tmZSnaRkOsuAk98v_1Lw.png"></a>
Units: Units: dark elixir.</p>
<p>As you can see, the Queen far outpaces the King.</p>
<h2>Town Hall Upgrade Cost Calculator</h2>
<p>The real reason for this post was my curiosity of what it would take me to fully upgrade my base. My spreadsheet can do this quite easily. Once I enter the data to the respective places (outlined below) the worksheet will give you your data. Here’s how mine looked:</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/zmgtozqvtpknw_small.png" alt="1-w_IX5z_XJ9Byb9AoRVrA1w.png"></a>
Cost progression with columns U to AG hidden.</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/4mwtvwviaqeag_small.png" alt="1-o6oRoc2ZCTiKdn6ebqjIJw.png"></a>
Cost progression summary with columns B to AF hidden.</p>
<p>As you can see, it would cost me 572k gems or $4,086 to fully upgrade my base to Town Hall 9.</p>
<p>All calculations are completed using <a href="http://reagentx.net/o/CoCulator.xlsx" rel="nofollow">this spreadsheet</a>. It is also hosted in this <a href="https://docs.google.com/spreadsheets/d/1IGBRtndf3uWC49Za9CoFyWJIpouIXWwJAsai8noQ0mY/edit?usp=sharing" rel="nofollow">Google Sheet</a>. The Google Sheet will do the math but cannot render the charts as far as I can tell.</p>
<p>Happy CoCulating!</p>
<h1>Part 2: Methodology</h1>
<p>To make things as clear as possible, I want to explain my methods and document how my methods work for those who may wish to expand this research and manipulate the data. I also document the assumptions I’ve made to simplify some of the more complicated facets of this project.</p>
<h2>Data Sources</h2>
<p>All of the data I used came from the charts on the <a href="http://clashofclans.wikia.com/wiki/Clash_of_Clans_Wiki" rel="nofollow">Clash of Clans Wiki</a>. Each troop/building/spell has a small chart that I used to import into a large worksheet. Huge thanks to all of the hardworking people who contribute to the Wiki!</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/5xldeb6dhuhapg_small.png" alt="1-kAHZD-4AJ8ILm9ZqXFW4JQ.png"></a>
Screenshot from <a href="http://clashofclans.wikia.com/wiki/Haste_Spell" rel="nofollow">http://clashofclans.wikia.com/wiki/Haste_Spell</a></p>
<p>You can download the Excel worksheet <a href="http://reagentx.net/o/Raw%20Item%20Data%20CoC.xlsx" rel="nofollow">here</a> or view it in Google Sheets <a href="https://docs.google.com/spreadsheets/d/15iPSA__A8J6yCk4SD5IR4hMU2qUgIxu7wyiSdzDffcc/edit?usp=sharing" rel="nofollow">here</a>. I will be using this data source to make all of the calculations in the rest of the project. For this analysis, I only used the columns pertaining to the level, cost, and requirement columns. However, all of the data is in the table if you want to do your own experimentation.</p>
<h2>Assumptions</h2>
<ul>
<li><p>The calculations assume that no wait times are expedited: only the cost of resources are calculated. I made this choice because buying resources is more efficient than buying time.</p></li>
<li><p>Gem cost is located in <a href="https://docs.google.com/spreadsheets/d/1WYZHl60Yzt8N44kxcNlI-lIEnllUtSSMX6OOronSoec/edit?usp=sharing" rel="nofollow">this</a> Google Sheet and calculated as follows: </p> </li>
</ul>
<a href="http://img.svbtle.com/kof1qbjvejx9nq.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/kof1qbjvejx9nq_small.png" alt="1-rItVdyefoyiKCQX7QOJFOw.png"></a>
<ul>
<li><p>When calculating the dollar cost, I assume purchasing of the 14,000 gem pack. I made this assumption because it is the cheapest option when buying lots of gems. Is it less realistic? Perhaps. It is, however, the most efficient in the long run.</p></li>
<p>Calculations assume that you are upgrading to the maximum of your base’s capacity: if you enter “7” for your Town Hall level, it will calculate the costs to max all of your buildings to the Town Hall 7 limits. Thus, if you enter 1, it will calculate all the costs associated with maxing a level 1 Town Hall. Enter a higher level to calculate for a higher Town Hall. If you are level 6, entering 7 will calculate the cost to get from your current setup to a max level 7.</p></li>
<li><p>Calculations are made only to max the levels of buildings: there are no partial calculations.</p></li>
<li><p>Resources are assumed to have been bought directly from the building dialog itself, bypassing your collectors.</p></li>
<li><p>Currency is USD. This can be easily changed in the Gem Cost Assumptions tab.</p></li>
<li><p>No builder’s huts are purchased. Since we do not account for time, they are irrelevant. Time is infinite, resources are finite.</p></li>
<li><p>Resources from your collectors are not used. Upgrading your collectors last using the all-gems method will make the amount of resources they generate a rounding error.</p></li>
<li><p>Gems start at zero. You actually start at 500 and the game forces you to spend some, but I ignored this. By the time you get to the final Town Hall 10 count, 500 gems would be a rounding error anyway.</p></li>
<li><p>Walls are upgraded with gold, not elixir, from level 8 onward. This doesn’t actually matter for the cost calculations (gold and elixir cost the same), but does mean some of the cost that can be split between the two resources is not displayed that way in my spreadsheet.</p></li>
</ul>
<h2>Data Inputs</h2>
<p>This began as a project to calculate the upgrade cost (in gems and dollars) to max out my base. Thus, I needed to be able to input the current building data for my base.</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/5kk7t98lgd8gvq_small.png" alt="1-7I4rH14Spmx99tAi90iYgQ.png"></a>
Organizational structure of the data-entering system.</p>
<p>I created a column-based system to enter the level of each building: each row has a different building, followed by 7 columns used to enter the level of each building. It may take some time to get everything entered properly, but this is the simplest way to make the relevant calculations.</p>
<p>I found the easiest way to do this was to put my village into edit mode, remove all of the pieces, and use the list of structures to enter the data into the fields.</p>
<h2>Calculations</h2>
<p>All calculations are done in <a href="http://reagentx.net/o/CoCulator.xlsx" rel="nofollow">this</a> spreadsheet. It is also hosted in this <a href="https://docs.google.com/spreadsheets/d/1IGBRtndf3uWC49Za9CoFyWJIpouIXWwJAsai8noQ0mY/edit?usp=sharing" rel="nofollow">Google Sheet</a>, but some formulas and charts are not supported.</p>
<p><img src="https://d23f6h5jpj26xu.cloudfront.net/kgixktpdcoidqq_small.png" alt="1-bxAR4-e7XBS-nXQcsGl2nA.png"></a></p>
<p>Each row corresponds to a row from the above data-entering system. Extra rows added in case additional buildings are added. Generally all columns except for “Calculation” are hidden.</p>
<p>Finally, the fun part! There are many different calculations that go into this worksheet. Foremost, we must get the data from the correct column for the Town Hall level:</p>
<pre><code>=IF(OR(ISNUMBER(B10,$Q10 = B10),IFERROR(SUM(OFFSET(Tables!$A$75,MATCH($A10,Tables!$A$75 : $A$106,0) - 1,1,1,$Q10)),0),0) * P10 </code></pre>
<p>Then, we must calculate the cost of each individual building (up to 7 buildings):</p>
<pre><code>=IF(OR(ISNUMBER(C10),$Q10 = C10),IFERROR(SUM(OFFSET(Tables!$A$75,MATCH($A10,Tables!$A$75 : $A$106,0) - 1,C10 + 1,1,$Q10 - C10)),0),0)</code></pre>
<p>Once all of the individual building upgrade costs have been calculated, they are summed and pushed into charts. All of the calculations from this point are basic sums or other simple arithmetic.</p>
<p>Now go forth with your newfound knowledge and Clash On!</p>
<p><em>This post will be updated when the stats for the <a href="https://twitter.com/ClashofClans/status/657850190716628992" rel="nofollow">recently announced</a> Town Hall 11 (and it’s respective buildings) are released.</em></p>
<center><p>Discussion: <a href="https://www.reddit.com/r/ClashOfClans/comments/3q2710/misc_clash_of_clans_an_economic_analysis_or_how_i/">r/ClashOfClans</a></p></center> </content>
  </item>
    <item>
    <title>Using Your Twitter Archive to Visualize Your Tweets</title>
    <link>https://chrissardegna.com/blog/posts/using-your-twitter-archive-to-visualize-your-tweets/</link>
    <content type="html"> <p>In December 2012, Twitter unveiled its “<a href="https://blog.twitter.com/2012/your-twitter-archive" rel="nofollow">Archive</a>” functionality, allowing users to download backups of all of their tweets. The downloaded files included a html interface for searching and reading tweets, which becomes very tedious and cumbersome with large amounts of data. The download also includes a .csv file that includes the raw data. We will be using this data for the following project. My data only goes through March 2015 because I used <a href="https://github.com/benjaminjackson/shame-eraser" rel="nofollow">Shame Eraser</a> to delete them all from <a href="http://twitter.com/rxcs" rel="nofollow">my account</a>. </p>
<p>The .csv should first be reformatted to an Excel Workbook to speed up the processing of data. The data table contains the following columns:</p>
<pre><code>tweet_id
in_reply_to_status_id
in_reply_to_user_id
timestamp
source
text
retweeted_status_id
retweeted_status_user_id
retweeted_status_timestamp
expanded_urls
</code></pre>
<p>We will primarily be using the following, as well as 2 new ones we will be adding later:</p>
<pre><code>in_reply_to_user_id
timestamp
source
text
retweeted_status_id
</code></pre>
<p><em>All of the charts below are made with PivotTables. If you do not have access to Excel 2015 or later for OS X you cannot accomplish the following.</em></p>
<p>Our first chart will track our tweet density over time.</p>
<p><a href="https://img.svbtle.com/mqfdh0rovrcwg.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/mqfdh0rovrcwg.png" alt="rxcs Tweet Density.png"></a></p>
<p>Our first pivot will contain 2 items, <code>timestamp</code> and <code>text</code>. Place <code>timestamp</code> in the column section and group how you like. I selected Months and Years. <code>text</code> should go under values and set to summarize as “count.” From here, you can make the chart. It should appear in the PivotTable Builder as follows:</p>
<p><a href="http://img.svbtle.com/mb9hjwrtzgtdza.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/mb9hjwrtzgtdza_small.png" alt="Screen Shot 2015-08-15 at 2.59.28 AM.png"></a></p>
<p>Our next chart is slightly less complicated. It will display the number of normal tweets, retweets, and replies or account has made.</p>
<p><a href="http://img.svbtle.com/fl17bxnnuvviqa.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/fl17bxnnuvviqa.png" alt="rxcs Tweet Type.png"></a></p>
<p>This pivot will contain 3 items, <code>in_reply_to_user_id</code>, <code>retweeted_status_id</code>, and <code>text</code>, all set to summarize as count. The PivotTable Builder should display the following:</p>
<p><a href="http://img.svbtle.com/e2fdvpynhrbj5w.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/e2fdvpynhrbj5w_small.png" alt="Screen Shot 2015-08-15 at 2.30.18 AM.png"></a></p>
<p>Our third chart is slightly more complex than the first. It will show the distribution of the length of tweets.</p>
<p><a href="http://img.svbtle.com/hf7zfgpamjquq.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/hf7zfgpamjquq.png" alt="rxcs Tweet Length.png"></a></p>
<p>To accomplish this, we must add a new column to our data file. Add a new column next to the text column and make the title something like <code>Count chars</code>. The cells should read <code>=LEN(G2)</code>, where G2 is the reference to the cell directly to the left in the <code>text</code> column. </p>
<p>Make a new pivot from this data. Make the rows <code>Count chars</code> and the values <code>Count chars</code> set to summarize as count. It should appear as follows in the PivotTable Builder:</p>
<p><a href="http://img.svbtle.com/0seri14x3ujvdg.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/0seri14x3ujvdg_small.png" alt="Screen Shot 2015-08-15 at 2.39.21 AM.png"></a></p>
<p>Finally, we will make a chart that shows the number of tweets per source, i.e. the number of tweets that are sent to Twitter using a certain application. </p>
<p><a href="http://img.svbtle.com/kkpinr3fvrxioq.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/kkpinr3fvrxioq.png" alt="rxcs Tweets Per Source.png"></a>
<em>Note: This chart excludes apps with a count of &lt; 10 due to the volume of 1-time tweets. It also excludes Tweetbot for iOS, which, for me, summed to 68,175.</em></p>
<p>We must first sanitize the <code>source</code> column to make it easily readable, since it contains the HTML code for the App URL in addition to the name of the app. To accomplish this, we will add a new column directly next to the <code>source</code> column. I called mine <code>source-clean</code>. The following formula should strip the name out of the <code>source</code> column:</p>
<pre><code>=IF(MID(LEFT(E3,FIND("",E3)-1),FIND("&gt;",E3)+1,LEN(E3))="Tweetbot for iÎŸS","Tweetbot for iOS",MID(LEFT(E3,FIND("",E3)-1),FIND("&gt;",E3)+1,LEN(E3)))</code></pre>
<p>Technically you only need <code>=MID(LEFT(E3,FIND("&lt;/",E3)-1),FIND("&gt;",E3)+1,LEN(E3))</code>, but my archive seemed to have some malformed unicode, displaying “Tweetbot for iOS’ as "Tweetbot for iÎŸS,” necessitating the <code>=IF</code>. In either instance, E3 represents the <code>source</code> cell directly to the left of the <code>source-clean</code> cell. This will fill down to the bottom and correctly strip the names out of the <code>source</code> cells. </p>
<p>From here, we can make our pivot. Use <code>source-clean</code> as the row and <code>text</code> as the value, summarized a count. The PivotTable Builder should display the following:</p>
<p><a href="http://img.svbtle.com/afkczjkab6xha.png" rel="nofollow"><img src="https://d23f6h5jpj26xu.cloudfront.net/afkczjkab6xha_small.png" alt="Screen Shot 2015-08-15 at 2.56.13 AM.png"></a></p>
<p>And there you have it: 4 very interesting and telling graphs about your history on Twitter, all directly compiled from your Twitter Archive. </p> </content>
  </item>  
</channel>

</rss>